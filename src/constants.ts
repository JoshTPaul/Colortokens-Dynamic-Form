import { FormElement } from "./types";

export const FORM_PAYLOAD: Array<FormElement> = [
  {
    displayName: "Client Information",
    key: "Client Information",
    type: "section",
    defaultValue: null,
    readOnly: false,
    required: false,
    placeholder: "",
    information: "",
    children: [
      {
        displayName: "Client ID",
        key: "clientID",
        type: "string",
        defaultValue: null,
        readOnly: false,
        required: true,
        placeholder: "",
        information: "",
        identifier: "oauth",
      },
      {
        displayName: "Client Secret",
        key: "clientSecret",
        type: "password",
        defaultValue: null,
        readOnly: false,
        required: true,
        placeholder: "",
        information: "",
        identifier: "oauth",
      },
    ],
    identifier: "oauth",
  },
  {
    displayName: "Token Details",
    key: "Token Details",
    type: "section",
    defaultValue: null,
    readOnly: false,
    required: false,
    placeholder: "",
    information: "",
    children: [
      {
        displayName: "Algorithm",
        key: "algo",
        type: "string",
        defaultValue: "RS256",
        readOnly: true,
        required: false,
        placeholder: "",
        information: "We only support RSA256 algorithm",
        identifier: "oauth",
      },
      {
        displayName: "Client Scopes",
        key: "clientScopes",
        type: "string",
        defaultValue: "openid profile email",
        readOnly: true,
        required: false,
        placeholder: "",
        information: "",
        identifier: "oauth",
      },
      {
        displayName: "Token Type",
        key: "tokenType",
        type: "dropdown",
        defaultValue: "jwt",
        readOnly: false,
        required: false,
        possibleValues: [
          {
            displayName: "JWT",
            key: "jwt",
            defaultValue: "jwt",
            children: null,
            identifier: "",
            Type: "",
          },
          {
            displayName: "OPAQUE",
            key: "opaque",
            defaultValue: "opaque",
            children: [
              {
                displayName: "Profile Endpoint",
                key: "profileEndpoint",
                type: "string",
                defaultValue: "",
                readOnly: false,
                required: false,
                placeholder: "",
                information: "",
                identifier: "oauth",
              },
            ],
            identifier: "",
            Type: "",
          },
        ],
        placeholder: "",
        information: "",
        identifier: "oauth",
      },
    ],
    identifier: "oauth",
  },
  {
    displayName: "User Attribute Mapping",
    key: "User Attribute Mapping",
    type: "section",
    defaultValue: null,
    readOnly: false,
    required: false,
    placeholder: "",
    information: "",
    children: [
      {
        displayName: "Email Attribute Name",
        key: "emailAttribute",
        type: "string",
        defaultValue: null,
        readOnly: false,
        required: false,
        placeholder: "email",
        information: "",
        identifier: "oauth",
      },
    ],
    identifier: "oauth",
  },
  {
    displayName: "Endpoints",
    key: "Endpoints",
    type: "section",
    defaultValue: null,
    readOnly: false,
    required: false,
    placeholder: "",
    information: "",
    children: [
      {
        displayName: "Authentication URL",
        key: "authUrl",
        type: "string",
        defaultValue: null,
        readOnly: false,
        required: true,
        placeholder: "https://domain.com/authorize",
        information: "",
        identifier: "oauth",
      },
      {
        displayName: "Token URL",
        key: "tokenUrl",
        type: "string",
        defaultValue: null,
        readOnly: false,
        required: true,
        placeholder: "https://domain.com/oauth/token",
        information: "",
        identifier: "oauth",
      },
      {
        displayName: "Discovery Endpoint",
        key: "dicoveryEndpoint",
        type: "string",
        defaultValue: null,
        readOnly: false,
        required: true,
        placeholder: "https://domain.com/.well-known/jwks.json",
        information: "",
        identifier: "oauth",
      },
      {
        displayName: "Logout URL",
        key: "logoutUrl",
        type: "string",
        defaultValue: null,
        readOnly: false,
        required: true,
        placeholder: "https://domain.com/logout",
        information: "",
        identifier: "oauth",
      },
    ],
    identifier: "oauth",
  },
  {
    displayName: "Session Details",
    key: "sessionDetails",
    type: "section",
    defaultValue: null,
    readOnly: false,
    required: false,
    placeholder: "",
    information: "",
    children: [
      {
        displayName: "Rolling Window",
        key: "refreshTokenRollingEnabled",
        type: "dropdown",
        defaultValue: true,
        readOnly: false,
        required: false,
        possibleValues: [
          {
            displayName: "Enabled",
            key: true,
            defaultValue: true,
            children: null,
            identifier: "",
            Type: "",
          },
          {
            displayName: "Disabled",
            key: false,
            defaultValue: false,
            children: null,
            identifier: "",
            Type: "",
          },
        ],
        placeholder: "",
        information:
          "When rolling window is enabled, session will remain valid as long as you keep using portal for time duration set in refresh token. If roling window is disabled, users will be forcefully logged out after the refresh token is expired",
        identifier: "oauth",
      },
      {
        displayName: "Refresh Token Validity (in days)",
        key: "refreshTokenTTL",
        type: "integer",
        defaultValue: 30,
        readOnly: false,
        required: true,
        placeholder: "(in days)",
        information: "The default refresh token validity is 30 days.",
        identifier: "oauth",
      },
      {
        displayName: "Access Token Validity (in mins)",
        key: "accessTokenTTL",
        type: "integer",
        defaultValue: 15,
        readOnly: false,
        required: true,
        placeholder: "(in minutes)",
        information: "The default access token validity is 15 minutes.",
        identifier: "oauth",
      },
    ],
    identifier: "oauth",
  },
];
